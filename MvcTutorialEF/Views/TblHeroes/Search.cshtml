@model MvcTutorialEF.Models.ViewModel.HeroSearchViewModel
@*cshtml => Razor => C# + html*@
@{
    ViewData["Title"] = "Search";
}

<button onclick="toggleDisplay()">切換</button>

<div id="ef-demo">
    <h1>Search</h1>

    <h4>HeroSearch</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Search">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    @*asp-for 用來在頁面指定表單的 input 要跟 Model 的哪個屬性綁定*@
                    <label asp-for="SearchParams.MinAtk" class="control-label"></label>
                    <input asp-for="SearchParams.MinAtk" class="form-control" />
                    <span asp-validation-for="SearchParams.MinAtk" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="SearchParams.MaxAtk" class="control-label"></label>
                    <input asp-for="SearchParams.MaxAtk" class="form-control" />
                    <span asp-validation-for="SearchParams.MaxAtk" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="SearchParams.Gender" class="control-label"></label>
                    <select asp-for="SearchParams.Gender" asp-items="@Model.GenderSelectList" class="form-control"></select>
                    <span asp-validation-for="SearchParams.Gender" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <h4>@ViewData["Message"]</h4>

    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Heroes[0].Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Heroes[0].Atk)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Heroes[0].Hp)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @*@model 宣告*@
            @*@Model 使用*@
    @foreach (var item in Model.Heroes) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Atk)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Hp)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
    }
        </tbody>
    </table>
</div>

@* select 選取*@
@*CSS SELECTOR：  . 代表 class  # 代表 id*@
@* id="ASDFGH" class="text-primary bg-danger"*@
<div id="jquery-demo" class="container-fluid">
    <div class="row">
        <div class="col-sm-3">
            <p id="p-1">
                這是一個 P 元素，ID = "p-1".
            </p>
            <br />
            <button onclick="changeParagraphColor()">變換顏色</button>
            <button onclick="changeParagraphText()">增加文字</button>
        </div>
        <div class="col-sm-3">
            <ul id="ul-1">
                <li>item 1</li>
                <li>item 2</li>
                <li>item 3</li>
            </ul>
            <br />
            <button onclick="changeListColor()">變換背景顏色</button>
            <button onclick="addListItem()">插入項目</button>
        </div>
        <div class="col-sm-3">
            <table id="table-1" border="1">
                <tr>
                    <th>表頭1</th>
                    <th>表頭2</th>
                    <th>表頭3</th>
                </tr>
                <tr>
                    <td>data 1-1</td>
                    <td>data 1-2</td>
                    <td>data 1-3</td>
                </tr>
                <tr>
                    <td>data 2-1</td>
                    <td>data 2-2</td>
                    <td>data 2-3</td>
                </tr>
            </table>
            <br />
            <button onclick="insertRow()">插入 row</button>
            <button onclick="addClickEvent()">加入點擊事件</button>
        </div>
        <div class="col-sm-3">
            <select id="select-1">
                <option>Loding</option>
            </select>
        </div>
    </div>
</div>

@section Scripts {
    @*Partial View*@
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        let displayCounter = 0;
        function toggleDisplay() {
            if (displayCounter % 2 === 0) {
                $("#ef-demo").hide();
                $("#jquery-demo").show();
            } else {
                $("#ef-demo").show();
                $("#jquery-demo").hide();
            }
            displayCounter++;
        }

        
        $(document).ready(function () {
            $("#ef-demo").hide();
            $("#jquery-demo").show();
            $.ajax({ // callback 回乎函數
                url: '/TblHeroes/GetDummySelectList',
                method: 'GET', // jQuery 1.9 版以前只能用 type: 'GET'，1.9以後兩個都可以
                success: function (resp) {
                    if (resp && resp.length > 0) {
                        const selectElement = $("#select-1");
                        selectElement.empty(); // 清空 select options
                        for (let i = 0; i < resp.length; i++) {
                            selectElement.append(
                                new Option(
                                    resp[i].name, resp[i].value)
                            );
                        }
                    }
                }
            }).then(function () {
                $("#select-1").on('change', function () {
                    // $(this) 代表叫 jQuery 幫我們取 "觸發這個 event" 的元素
                    // 也就是被選中的 option
                    alert($(this).val()); 
                });
            });
        });

        var counter = 0;
        function changeParagraphColor() {
            const pElement = $("#p-1");
            pElement.removeClass('text-danger');
            pElement.removeClass('text-dark');

            if (counter % 2 === 0) {
                pElement.addClass('text-danger');
                pElement.css('font-size', '24px');
            } else {
                pElement.addClass('text-dark');
                pElement.css('font-size', '14px');
            }
            counter++;
        }

        function changeParagraphText() {
            // text() -> 取得文字值
            // text('value')-> 設定文字值
            // css('css_name') -> 取得樣式內容
            // css('css_name', 'value') -> 設定樣式內容
            const originalText = $('#p-1').text(); 
            $("#p-1").text(originalText + "jQuery 增加了一些文字。");
        }

        function changeListColor() {
            if (counter % 2 === 0) {
                $("#ul-1").addClass('bg-primary');
            } else {
                $("#ul-1").removeClass('bg-primary');
            }
            counter++;
        }

        function addListItem() {
            const ulElement = $("#ul-1");
            ulElement.append('<li>jQuery 新增了 item</li>');
        }

        function insertRow() {
            $("#table-1 > tbody").append(`
                <tr>
                    <td>data j-1</td>
                    <td>data j-2</td>
                    <td>data j-3</td>
                </tr>
            `);
        }

        function addClickEvent() {
            const cells = $("table > tbody > tr > td");
            console.log(cells.length);
            $("table > tbody > tr > td").click(function () {
                alert('jQuery event');
            });
        }
    </script>
}
